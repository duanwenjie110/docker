user root;
worker_processes  4;
worker_cpu_affinity 0001 0010 0100 1000;

error_log  logs/error.log info;

events {
    worker_connections  1024;
    accept_mutex off;
}

rtmp_auto_push on;
rtmp {
    chunk_size 4096;
    server {
        listen localIp:1935;

        notify_method get;
        
        application live {
            live on;
            wait_key on;
            wait_video on;

            on_publish http://localIp:11000/publish_start;
            on_play http://localIp:11000/play_start;
            on_publish_done http://localIp:11000/publish_done;
            on_play_done http://localIp:11000/play_done;
        }
    }
}

http {

upstream lmds {
    server tomcatIpPort;
    keepalive 60;
}
    server {
        listen localIp:11000;
        server_name  mds;
        listen localIp:10000 per_worker;

        #状态查询访问接口
        location /stat {             
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        #状态统计样式
        location /stat.xsl {       
            root /usr/local/nginx-mds/conf/;
        }
       
        #推送开始回调访问接口 
        location =/publish_start {
            # 过滤掉nginx内部互推的通知
            if ( $arg_flashver = ngx-local-relay )
            {
                 return 200;
            }
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://lmds/stream-loadbalance-jwzh/live/publish_start;
        }
        
        #推送结束回调访问接口 
        location =/publish_done {
            # 过滤掉nginx内部互推的通知
            if ( $arg_flashver = ngx-local-relay )
            {
                 return 200;
            }
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://lmds/stream-loadbalance-jwzh/live/publish_done;
        }
        
        #播放开始回调访问接口 
        location =/play_start {
            # 过滤掉nginx内部互推的通知
            if ( $arg_flashver = ngx-local-relay )
            {
                 return 200;
            }
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://lmds/stream-loadbalance-jwzh/live/play_start;
        }
        
        #播放结束回调访问接口
        location =/play_done {
            if ( $arg_flashver = ngx-local-relay )
            {
                 return 200;
            }
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://lmds/stream-loadbalance-jwzh/live/play_done;
        }
        
        # 静态页面访问
        location / {
            return 200;             
            
        }
        
        #RTMP推送端和拉流端控制接口
        location /control {
            rtmp_control all;
        }
    }
}

