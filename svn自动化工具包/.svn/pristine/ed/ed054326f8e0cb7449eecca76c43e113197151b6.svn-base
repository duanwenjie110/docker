#! /bin/bash
service_name="dsahkuhd"
parent_dir=`pwd`
config_dir="$parent_dir/data/conf/$service_name/"
#仓库地址
repository_addr="$1:$4"
temp_dir="$parent_dir/temp/$service_name-temp/"
#存放config的远程路径
s_dir="$5/$service_name/"
ip=$2
user=$3

checkFunctions (){
if [ $? -ne 0 ] 
then
	echo "comond execute fail"
	exit	
fi
}
checkPortNetstat(){
   if echo $1 |egrep -q '^[0-9]{1,5}$'
   then
	if [ $1 -gt 65535 ] || [ $1 -lt 1 ]
	then
		echo "error,input port between 1-65535"
		return 0
	else
		result=$(ssh $user@$ip netstat -an | grep LISTEN | grep -w $1)
		if [[ $result != *$1*  ]]
			then
				echo "$1 usable"
				return 1
			else
			echo "$1 unusable"
			return 0
		fi
	fi
   else
     echo "port input error"
     return 0
   fi

}

checkServiceExist()
{
    result=$(ssh $user@$ip docker ps -a | grep "$service_name-$1")
    if [ -z "$result" ]
    then
        return 1
    fi
    
    echo "service $service_name-$1 is exist"
    return 0
}

checkNum(){
	if echo $1 |egrep -q '^[1-9][0-9]*$'
	then
		return 1
	else
	echo "enter number error"
	return 0
	fi
}

ipcheck(){
	if echo $1 |egrep -q '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$'
		then
			a=`echo $1 | awk -F. '{print $1}'`
			b=`echo $1 | awk -F. '{print $2}'`
			c=`echo $1 | awk -F. '{print $3}'`
			d=`echo $1 | awk -F. '{print $4}'`

			if [ $a -gt 255 ] || [ $a -lt 0 ]
				then
					echo "ip address is error"
					elif [ $b -gt 255 ] || [ $b -lt 0 ]
					then
						echo "ip address is error"
						elif [ $c -gt 255 ] || [ $c -lt 0 ]
						then
							echo "ip address is error"
							elif [ $d -gt 255 ] || [ $d -lt 0 ]
							then
								echo "ip address is error"
							else
							if ping -c 5 $1 > /dev/null
								then
									echo "ping success"
								return 1
							else
							echo "ping faild"
						return 0
					fi
				fi
			else
			echo 'ip address is error'
		return 0
	fi
}

stty erase ^H
echo "copy temple config file"
#如果没有temp_dir目录则创建
if [ ! -d $temp_dir ]; then
	sudo mkdir -p -m 755 $temp_dir
	checkFunctions
	echo "sudo mkdir -p -m 755 ${temp_dir} done"
fi

while(true)
do
	echo "enter the number of $service_name:"
	read dsaHkUhd_num;
	checkNum $dsaHkUhd_num
	if [ $? -eq 1 ]
	then
		break
	else
		continue
	fi
done

while(true)
do
	echo "input the starting port"
	read starting_port
    echo $starting_port | egrep -q '^[0-9]{1,5}$'
    if [ $? -ne 0 ]
    then
        echo "port error"
        continue;
    fi
    
    portIndex=0
    ret=1
    while [ $portIndex -lt $dsaHkUhd_num ]
    do
        let localPort=$starting_port+$portIndex
        let portIndex=$portIndex+1
        
        checkPortNetstat $localPort
        if [ $? -ne 1 ]
        then
            ret=0
            break
        fi
    
        checkServiceExist $localPort
        if [ $? -ne 1 ]
        then
            ret=0
            break
        fi
    done
    
    if [ $ret -eq 0 ]
    then
        continue
    else
        break
    fi
done

file_index=$starting_port
k=$[$file_index+$dsaHkUhd_num];
while [ $file_index -lt $k ];
do
	echo $ip >>$temp_dir$"/$service_name-$file_index.docker"
	echo $file_index >>$temp_dir$"/$service_name-$file_index.docker"
	file_index=`expr $file_index + 1`;
done



echo "Copy config file to $ip"
echo "Determine whether remote directory exists"
ssh $user@$ip "if [ ! -d $s_dir ]; then
mkdir -p -m 755 $s_dir
echo "mkdir -p -m 755 ${s_dir} done"
	else echo "${s_dir} exsits"
	fi
	#;if [ ! -d $images_dir ]; then
	#  mkdir -p -m 755 $images_dir
#  echo "mkdir -p -m 755 ${images_dir} done"
	#  else echo "${images_dir} 存在"
	#fi
	"
checkFunctions
echo "Coping config file"
scp -r $temp_dir/* $user@$ip:$s_dir
checkFunctions
echo "Cope config file done"

echo "Remove temple file"
rm -rf $temp_dir
checkFunctions
echo "rm done"
#从远程仓库拉镜像
dockerResult=$(curl -s $repository_addr/v2/_catalog )
if  [[ $dockerResult ]]
	then
		echo "remote $repository_addr  docker repository usable"
	else
	echo "remote $repository_addr  docker repository confuse connect"
exit -1
fi

version=$(curl -s $repository_addr/v2/$service_name/tags/list)
if [[ $version != *errors*  ]]
	then
		echo "$service_name version list"
	else
	echo "version not found ,exit"
exit -1
fi

version_arr=`echo $version|cut -d '[' -f2|cut -d ']' -f1`

echo $version_arr | awk  'BEGIN{RS=","}{print FNR":" $1}'
while(true)
do
	echo "input number to choose images"
	read tag
	IFS=","
	arr=($version_arr)
	if echo $tag |egrep -q "^[1-"${#arr[@]}"]{1}$"
		then
			echo "you choose the version is ${arr[$tag-1]}"
			break
		else
		echo "error,input numbers between 1-${#arr[@]}"
	fi
done

echo "run docker in $ip"

i=$[$starting_port+$dsaHkUhd_num];
#j=0
while [ $starting_port -lt $i ];
do
	checkPortNetstat $starting_port
	if [ $? -eq 1 ]
	then
		ssh $user@$ip "docker run --name="$service_name-$starting_port" --net=host --log-opt max-size=1m --log-opt max-file=3 --restart=always -v /etc/localtime:/etc/localtime:ro -itd $repository_addr/$service_name:${arr[$tag-1]} $ip $starting_port"
		checkFunctions
		echo "run docker done"
		starting_port=`expr $starting_port + 1`;
	else
		starting_port=`expr $starting_port + 1`;
		continue
	fi
   
#   j=`expr $j + 1`;
   
done


