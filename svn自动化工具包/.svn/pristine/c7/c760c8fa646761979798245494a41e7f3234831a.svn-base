#!/bin/bash
#set -xv

config_backup="backup_`date +%Y_%m_%d`"

ipCheck(){
if echo $1 |egrep -q '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$'
then
    a=`echo $1 | awk -F. '{print $1}'`
    b=`echo $1 | awk -F. '{print $2}'`
    c=`echo $1 | awk -F. '{print $3}'`
    d=`echo $1 | awk -F. '{print $4}'`

    if [ $a -ge 255 ] || [ $a -le 0 ]
    then
        echo "ip address is error"
    elif [ $b -ge 255 ] || [ $b -le 0 ]
    then
        echo "ip address is error"
    elif [ $c -ge 255 ] || [ $c -le 0 ]
    then
        echo "ip address is error"
    elif [ $d -ge 255 ] || [ $d -le 0 ]
    then
        echo "ip address is error"
    else
        if ping -c 5 $1 > /dev/null
        then
            echo "ping success"
            return 1
        else
            echo "ping faild"
            return 0
        fi
    fi
else
    echo 'ip address is error'
    return 0
fi
}

path=`pwd`
execShell="backupExec.sh"
if [ -d $config_backup ]
then
    rm -rf $config_backup
    mkdir -p $config_backup
fi

echo "The Shell Script will backup java server war config info"

while :
do
    read -p "Please Input the remote tomcat host Ip: " remoteTomcatIp
    ipCheck $remoteTomcatIp
    if [ $? -ne 1 ]
    then
        continue
    fi
    
     read -p "Please Input the remote tomcat cfg install path: " remoteTomcatPath
     if [ -z $remoteTomcatPath ]
     then
        echo "the remote path is empty"
        continue
     fi
     
     ret=`ssh root@$remoteTomcatIp "[ -d $remoteTomcatPath ] && echo "ok" || echo "fail""`
     if [ $ret == "fail" ]
     then
        echo "the remote $remoteTomcatPath inexist"
        continue
     fi
     
     scp -r $execShell root@$remoteTomcatIp:$remoteTomcatPath
     if [ $? -ne 0 ]
     then
        echo "scp exce script fail"
        continue;
     fi
     
     ssh root@$remoteTomcatIp "cd $remoteTomcatPath && chmod a+x $execShell && bash $execShell"
     scp -r root@$remoteTomcatIp:$remoteTomcatPath/config $config_backup
     echo "remote [$remoteTomcatIp] war cfg backup path [$path/$config_backup]"
     read -p "continue backup cfg [yes/no]: " ctag
     if [[ "$ctag" == "yes" || "$ctag" == "y" ]]
     then
        continue
     else
        break
     fi
done
