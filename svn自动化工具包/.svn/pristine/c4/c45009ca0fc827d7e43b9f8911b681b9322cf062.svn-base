#!/bin/bash
#这是从war包提取配置文件的脚本
war1="background"
war2="javaCms"
war3="jwzh"
war4="mq-jwzh"
war5="socketio-jwzh"
war6="stream-loadbalance-jwzh"
war7="vod-loadbalance-jwzh"
cfg_bkup="config"
#war包地址，注意与$path配合
new_warfile="war"
web_inf="WEB-INF"
classes="classes"
stat="static"
cfg="config.js"
j=".jar"
war=".war"
warpack=(0 $war1 $war2 $war3 $war4 $war5 $war6 $war7)
path=$1/javaWar
#path=`pwd`
cd $path
#创建config文件夹，存放提取出来的配置文件
mkdir -p config
cd config

#检查命令是否正确执行
checkFunctions (){
if [ $? -ne 0 ] 
then
	echo "comand execute fail"
	exit	
fi
}

#检查war包是否存在
checkWarExsit (){
if [  -e $path/$new_warfile/$1 ]
then
echo " "
else
echo "$1 not exist, please check"
exit	
fi
}

back_up1(){
#备份background
	checkWarExsit $war1$war
   if [ -e $path/$new_warfile/$war1$war ];then
       #创建临时文件夹存放解压出来的文件
        mkdir -p $war1
        mkdir -p $war1/server-background-1.0.0.1
        mkdir -p $war1/server-common-1.0.0.1		
		
		#解压war包
		unzip -o $path/$new_warfile/$war1$war  -d $path/$new_warfile/$war1
		#解压jar包
        unzip -o $path/$new_warfile/$war1/$web_inf/lib/server-background-1.0.0.1$j  -d  $path/$new_warfile/$war1/$web_inf/lib/server-background-1.0.0.1
        unzip -o $path/$new_warfile/$war1/$web_inf/lib/server-common-1.0.0.1$j  -d  $path/$new_warfile/$war1/$web_inf/lib/server-common-1.0.0.1		
		
		#复制配置文件
		cp -arf $path/$new_warfile/$war1/$web_inf/lib/server-background-1.0.0.1/*.properties $path/$cfg_bkup/$war1/server-background-1.0.0.1/
		cp -arf $path/$new_warfile/$war1/$web_inf/lib/server-common-1.0.0.1/*.properties $path/$cfg_bkup/$war1/server-common-1.0.0.1/
		
		#删除临时文件夹
     	rm -rf $path/$new_warfile/$war1/$web_inf/lib/server-background-1.0.0.1
        rm -rf $path/$new_warfile/$war1/$web_inf/lib/server-common-1.0.0.1
		rm -rf $path/$new_warfile/$war1
   fi
   }
   
  back_up2(){
#备份javaCms
   checkWarExsit $war2$war
   if [ -e $path/$new_warfile/$war2$war ];then
      #创建临时文件夹存放解压出来的文件
        mkdir -p $war2
		#解压war包
		unzip -o $path/$new_warfile/$war2$war  -d $path/$new_warfile/$war2
		#复制配置文件
	    cp -arf $path/$new_warfile/$war2/$web_inf/$classes/cms.properties $path/$cfg_bkup/$war2/
		#删除临时文件夹
		rm -rf $path/$new_warfile/$war2
   fi
 }
 
 back_up3(){
#备份jwzh
   checkWarExsit $war3$war
   if [ -e $path/$new_warfile/$war3$war ];then
       #创建临时文件夹存放解压出来的文件
        mkdir -p $war3
        mkdir -p jwzh/server-jwzh-1.0.0.1 jwzh/static
		mkdir -p jwzh/server-common-1.0.0.1
		
		#解压war包
		unzip -o $path/$new_warfile/$war3$war  -d $path/$new_warfile/$war3
		#解压jar包
		unzip -o $path/$new_warfile/$war3/$web_inf/lib/server-jwzh-1.0.0.1$j  -d  $path/$new_warfile/$war3/$web_inf/lib/server-jwzh-1.0.0.1
		unzip -o $path/$new_warfile/$war3/$web_inf/lib/server-common-1.0.0.1$j  -d  $path/$new_warfile/$war3/$web_inf/lib/server-common-1.0.0.1		
		
		#复制配置文件
		cp -arf $path/$new_warfile/$war3/$web_inf/lib/server-jwzh-1.0.0.1/*.properties $path/$cfg_bkup/$war3/server-jwzh-1.0.0.1/
		cp -arf $path/$new_warfile/$war3/$web_inf/lib/server-common-1.0.0.1/*.properties $path/$cfg_bkup/$war3/server-common-1.0.0.1/		
		
		#删除临时文件夹
        rm -rf $path/$new_warfile/$war3/$web_inf/lib/server-jwzh-1.0.0.1
        rm -rf $path/$new_warfile/$war3/$web_inf/lib/server-common-1.0.0.1
		
		#复制配置文件
        cp -arf $path/$new_warfile/$war3/$stat/config.js $path/$cfg_bkup/$war3/$stat/
		
		#删除临时文件夹
		rm -rf $path/$new_warfile/$war3
   fi
 }
 
 back_up4(){
#备份mq-jwzh
	checkWarExsit $war4$war
   if [ -e $path/$new_warfile/$war4$war ];then
      #创建临时文件夹存放解压出来的文件
        mkdir -p $war4
		#解压war包
		unzip -o $path/$new_warfile/$war4$war  -d $path/$new_warfile/$war4
		#复制配置文件
        cp -arf $path/$new_warfile/$war4/$web_inf/$classes/*.properties $path/$cfg_bkup/$war4/
		#删除临时文件夹
		rm -rf $path/$new_warfile/$war4
   fi
 }
 
 back_up5(){
#备份socketio-jwzh
	checkWarExsit$war5$war
   if [ -e $path/$new_warfile/$war5$war ];then
       #创建临时文件夹存放解压出来的文件
        mkdir -p $war5
		#解压war包
		unzip -o $path/$new_warfile/$war5$war  -d $path/$new_warfile/$war5
		#复制配置文件
		cp -arf $path/$new_warfile/$war5/$web_inf/$classes/websocket.properties $path/$cfg_bkup/$war5/
		#删除临时文件夹
		rm -rf $path/$new_warfile/$war5
   fi
}	

back_up6(){
#备份stream-loadbalance-jwzh
	checkWarExsit $war6$war
   if [ -e $path/$new_warfile/$war6$war ];then
       #创建临时文件夹存放解压出来的文件
        mkdir -p $war6
		#解压war包
		unzip -o $path/$new_warfile/$war6$war  -d $path/$new_warfile/$war6
		#复制配置文件
        cp -arf $path/$new_warfile/$war6/$web_inf/$classes/*.properties $path/$cfg_bkup/$war6/
		#删除临时文件夹
		rm -rf $path/$new_warfile/$war6
   fi
 }
 back_up7(){
#备份vod-loadbalance-jwzh
#暂无配置文件需要备份
	checkWarExsit $war7$war
   if [ -e $path/$new_warfile/$war7$war ];then
       mkdir -p $war7
   fi
}

 back_up8(){
	back_up1
	checkFunctions
	back_up2
	checkFunctions
	back_up3
	checkFunctions
	back_up4
	checkFunctions
	back_up5
	checkFunctions
	back_up6
	checkFunctions
	back_up7
	checkFunctions
 }

choice=$2;
#choice="All";
if [[ $choice == "stream-loadbalance-jwzh/vod-loadbalance-jwzh" ]];then
	back_up6
	checkFunctions
	back_up7
	checkFunctions
elif [[ $choice == "javaCms/mq-jwzh" ]];then
	back_up2
	checkFunctions
	back_up4
	checkFunctions
elif [[ $choice == "socketio-jwzh/jwzh/background" ]];then
	back_up1
	checkFunctions
	back_up3	
	checkFunctions
	back_up5
	checkFunctions
elif [[ $choice == "All" ]];then
	back_up8
	checkFunctions
else
	echo " "
fi

