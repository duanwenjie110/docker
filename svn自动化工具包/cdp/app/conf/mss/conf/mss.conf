#user  nobody
user  nobody nobody;

#工作进程数，与CPU核数保持一致
worker_processes  1;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
	#隐藏nginx版本号
	server_tokens off;
	
	#设定mime类型,类型由mime.type文件定义
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

	#设定日志格式
    #access_log  logs/access.log  main;

	#上传文件最大值和请求报文体buffer值
	client_max_body_size 20M;
	client_body_buffer_size 20M;

	#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，
    #必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile        on;
	
	#将tcp_nopush和tcp_nodelay两个指令设置为on用于防止网络阻塞
    #tcp_nopush      on;
    tcp_nodelay     on;

	#连接超时时间
    #keepalive_timeout  0;
    keepalive_timeout  65;

	#是否开启gzip压缩
    #gzip  on;
	
	
	#状态配置
	req_status_zone server_play "/flv" 256k;
	req_status_zone server_upload "/upload" 256k;
	#req_status server_play server_upload;
	
	#连接限制配置
	limit_conn_log_level error;
	limit_conn_zone $binary_remote_addr zone=servernum:1m;
	limit_conn_zone $server_name$server_port zone=sitenum:1m;
	
	include extra/server_upload.conf;
	include extra/server_play.conf;
	include extra/server_status.conf;



}
